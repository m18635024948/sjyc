<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd    
    "
	xmlns:p="http://www.springframework.org/schema/p">

	<import
		resource="classpath:/META-INF/spring/aoyama-macchinetta-domain.xml" />

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<context:property-placeholder
		location="classpath*:/META-INF/spring/*.properties" />

	<bean id="beanMapper"
		class="org.dozer.spring.DozerBeanMapperFactoryBean">
		<property name="mappingFiles"
			value="classpath*:/META-INF/dozer/order-mapping.xml" />
	</bean>
	
	<bean id="standardBeanMapper"
		class="org.dozer.spring.DozerBeanMapperFactoryBean">
		<property name="mappingFiles"
			value="classpath*:/META-INF/dozer/orderCoStandard-mapping.xml" />
	</bean>
	
	<bean id="tuxedoBeanMapper"
		class="org.dozer.spring.DozerBeanMapperFactoryBean">
		<property name="mappingFiles"
			value="classpath*:/META-INF/dozer/orderCoTuxedo-mapping.xml" />
	</bean>
	
	<bean id="washableBeanMapper"
		class="org.dozer.spring.DozerBeanMapperFactoryBean">
		<property name="mappingFiles"
			value="classpath*:/META-INF/dozer/orderCoWashable-mapping.xml" />
	</bean>

	<!-- Message -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>i18n/application-messages</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!-- Exception Code Resolver. -->
	<bean id="exceptionCodeResolver"
		class="org.terasoluna.gfw.common.exception.SimpleMappingExceptionCodeResolver">
		<!-- Setting and Customization by project. -->
		<property name="exceptionMappings">
			<map>
				<entry key="ResourceNotFoundException" value="e.05.fw.5001" />
				<!-- 2019/3/25 JinYunFei ADD START -->
				<entry key="MultipartException" value="e.06.fw.6001" />
				<!-- 2019/3/25 JinYunFei ADD END -->
				<entry key="InvalidTransactionTokenException"
					value="e.07.fw.7001" />
				<entry key="BusinessException" value="e.08.fw.8001" />
				<entry key=".DataAccessException" value="e.09.fw.9002" />
			</map>
		</property>
		<property name="defaultExceptionCode" value="e.09.fw.9001" />
	</bean>

	<!-- Exception Logger. -->
	<bean id="exceptionLogger"
		class="org.terasoluna.gfw.common.exception.ExceptionLogger">
		<property name="exceptionCodeResolver"
			ref="exceptionCodeResolver" />
	</bean>

	<!-- Filter. -->
	<bean id="exceptionLoggingFilter"
		class="org.terasoluna.gfw.web.exception.ExceptionLoggingFilter">
		<property name="exceptionLogger" ref="exceptionLogger" />
	</bean>

<context:annotation-config />

<!-- 	<bean
		class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
		过期时间30分钟   单位秒
		<property name="maxInactiveIntervalInSeconds" value="1800"></property>
		</bean>

	<bean
		class="org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory"
		p:host-name="${redis.host}" p:port="${redis.port}"
		p:password="${redis.auth}" />-->
		

</beans> 
